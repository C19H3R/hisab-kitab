{"version":3,"sources":["Components/LeftSide/TotalLeft.js","Components/LeftSide/GivenAmounts.js","Components/LeftSide/Left.js","Components/RightSide/TotalRight.js","Components/RightSide/ReturnedAmounts.js","Components/RightSide/Right.js","Components/MainBody.js","Components/HeaderSection.js","Components/Total.js","App.js","serviceWorker.js","index.js"],"names":["TotalLeft","props","className","Taken","Interest","GivenAmounts","console","log","index","Amount","date","Left","useState","leftAmount","setLeftAmount","amount","setAmount","setDate","totalTaken","setTotalTaken","leftInterest","setLeftInterest","formatter","Intl","NumberFormat","style","currency","onSubmit","e","preventDefault","alert","dateArray","split","givingDay","parseInt","givingMonth","givingYear","presentDay","Date","getDate","presentMonth","getMonth","presentYear","getFullYear","countMonths","parseFloat","x","InputGroup","InputGroupAddon","addonType","Input","type","placeholder","name","id","value","onChange","target","Button","color","format","map","amt","key","TotalRight","ReturnedAmounts","Right","rightAmount","setRightAmount","rightInterest","setRightInterest","MainBody","HeaderSection","Total","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8bf2b755.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst TotalLeft = (props) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <h4 className=\"col\">Total Amount: {props.Taken}</h4>\r\n      <h4 className=\"col\">Total Interest: {props.Interest}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default TotalLeft;\r\n","import React from 'react';\r\n\r\nconst GivenAmounts=(props)=>{\r\n  console.log(props)\r\n    return (\r\n        <div className=\"row\">\r\n          <div className=\"ml-4 col-2\"><p>{props.index}   </p></div>\r\n          <div className=\"col-4\"><p>{props.Amount}</p></div>\r\n          <div className=\"col-5\"><p>{props.date}</p></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GivenAmounts","import React, { useState } from \"react\";\r\nimport { InputGroup, InputGroupAddon, Button, Input } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TotalLeft from \"./TotalLeft\";\r\nimport GivenAmounts from \"./GivenAmounts\";\r\n\r\nconst Left = () => {\r\n  const [leftAmount, setLeftAmount] = useState([]);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [totalTaken, setTotalTaken] = useState(0);\r\n  const [leftInterest, setLeftInterest] = useState(0);\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (amount === \"\") {\r\n      return alert(\"please enter amount\");\r\n    }\r\n    if (date === \"\") {\r\n      return alert(\"please enter date\");\r\n    }\r\n    const dateArray = date.split(\"-\");\r\n    const givingDay = parseInt(dateArray[2]);\r\n    const givingMonth = parseInt(dateArray[1]);\r\n    const givingYear = parseInt(dateArray[0]);\r\n    const presentDay = new Date().getDate();\r\n    const presentMonth = new Date().getMonth() + 1;\r\n    const presentYear = new Date().getFullYear();\r\n    console.log(presentDay + \"/\" + presentMonth + \"/\" + presentYear);\r\n    console.log(givingDay + \"/\" + givingMonth + \"/\" + givingYear);\r\n\r\n    var countMonths=0;\r\n\r\n    if (givingYear === presentYear) {\r\n      if (\r\n        (givingDay < 15 && presentDay < 15) ||\r\n        (givingDay >= 15 && presentDay >= 15)\r\n      ) {\r\n        countMonths = presentMonth - givingMonth;\r\n      }\r\n      if (givingDay >= 15 && presentDay < 15) {\r\n        countMonths = presentMonth - givingMonth - 1;\r\n      }\r\n      if (givingDay < 15 && presentDay >= 15) {\r\n        countMonths = presentMonth - givingMonth + 1;\r\n      }\r\n    }\r\n    if (presentYear> givingYear) {\r\n      if (givingMonth === presentMonth) {\r\n        if (\r\n          (givingDay < 15 && presentDay < 15) ||\r\n          (givingDay >= 15 && presentDay >= 15)\r\n        ) {\r\n          countMonths = 12;\r\n        }\r\n        if (givingDay >= 15 && presentDay < 15) {\r\n          countMonths = 11;\r\n        }\r\n        if (givingDay < 15 && presentDay >= 15) {\r\n          countMonths = 13;\r\n        }\r\n      }\r\n      if (givingMonth > presentMonth) {\r\n        if (\r\n          (givingDay < 15 && presentDay < 15) ||\r\n          (givingDay >= 15 && presentDay >= 15)\r\n        ) {\r\n          countMonths = 12 - givingMonth + presentMonth;\r\n        }\r\n        if (givingDay >= 15 && presentDay < 15) {\r\n          countMonths = 11 - givingMonth + presentMonth;\r\n        }\r\n        if (givingDay < 15 && presentDay >= 15) {\r\n          countMonths = 13 - givingMonth + presentMonth;\r\n        }\r\n      }\r\n      if (givingMonth < presentMonth) {\r\n        if (\r\n          (givingDay < 15 && presentDay < 15) ||\r\n          (givingDay >= 15 && presentDay >= 15)\r\n        ) {\r\n          countMonths = 12 - givingMonth + presentMonth;\r\n        }\r\n        if (givingDay >= 15 && presentDay < 15) {\r\n          countMonths = 12 - givingMonth + presentMonth - 1;\r\n        }\r\n        if (givingDay < 15 && presentDay >= 15) {\r\n          countMonths = 12 - givingMonth + presentMonth + 1;\r\n        }\r\n      }\r\n    }\r\n    console.log(countMonths);\r\n\r\n    const Interest = amount * 0.02 * countMonths;\r\n    console.log(Interest);\r\n    setLeftInterest(parseFloat(leftInterest) + parseFloat(Interest));\r\n    const x = {\r\n      amount,\r\n      date,\r\n    };\r\n    setLeftAmount([...leftAmount, x]);\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n    setTotalTaken(parseFloat(totalTaken) + parseFloat(amount));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Given By Us</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"row\">\r\n              <InputGroup className=\"container\">\r\n                <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                <Input\r\n                  type=\"number\"\r\n                  placeholder=\"Amount\"\r\n                  name=\"LeftAmount\"\r\n                  id=\"LeftAmount\"\r\n                  value={amount}\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n                {/* TODO*/}\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <InputGroup>\r\n              <Input\r\n                type=\"date\"\r\n                placeholder=\"Date\"\r\n                name=\"InvestingDate\"\r\n                id=\"InvestingDate\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n              />\r\n              {/* TODO*/}\r\n            </InputGroup>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Button type=\"submit\" color=\"secondary\" className=\"container\">\r\n              Submit\r\n            </Button>\r\n            {/* TODO*/}\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className=\"border-bottom mt-3\">\r\n        <TotalLeft\r\n          Taken={formatter.format(totalTaken)}\r\n          Interest={formatter.format(leftInterest)}\r\n        />\r\n      </div>\r\n      {/* TODO*/}\r\n\r\n      <div className=\"my-4\">\r\n        <div className=\"row\">\r\n          <div className=\"ml-4 col-2\">\r\n            <b>SR. NO.</b>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <b>AMOUNT</b>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <b>DATE</b>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"amounts\">\r\n        {leftAmount.map(function (amt, index) {\r\n          return (\r\n            <GivenAmounts\r\n              key={index}\r\n              index={index + 1}\r\n              Amount={formatter.format(amt.amount)}\r\n              date={amt.date}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Left;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst TotalRight = (props) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <h4 className=\"col\">Total Amount: -{props.Taken}</h4>\r\n      <h4 className=\"col\">Total Interest: -{props.Interest}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default TotalRight;\r\n","import React from \"react\";\r\n\r\nconst ReturnedAmounts = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"row\">\r\n          <div className=\"ml-4 col-2\"><p>{props.index}</p></div>\r\n          <div className=\"col-4\"><p>-{props.Amount}</p></div>\r\n          <div className=\"col-5\"><p>{props.date}</p></div>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default ReturnedAmounts;\r\n","import React, { useState } from \"react\";\r\nimport { InputGroup, InputGroupAddon, Button, Input } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TotalRight from \"./TotalRight\";\r\nimport ReturnedAmounts from \"./ReturnedAmounts\";\r\n\r\nconst Right = () => {\r\n  const [rightAmount, setRightAmount] = useState([]);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [totalTaken, setTotalTaken] = useState(0);\r\n  const [rightInterest, setRightInterest] = useState(0);\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (amount === \"\") {\r\n      return alert(\"please enter amount\");\r\n    }\r\n    if (date === \"\") {\r\n      return alert(\"please enter date\");\r\n    }\r\n    const dateArray = date.split(\"-\");\r\n    const givingDay = parseInt(dateArray[2]);\r\n    const givingMonth = parseInt(dateArray[1]);\r\n    const givingYear = parseInt(dateArray[0]);\r\n    const presentDay = new Date().getDate();\r\n    const presentMonth = new Date().getMonth() + 1;\r\n    const presentYear = new Date().getFullYear();\r\n    console.log(presentDay + \"/\" + presentMonth + \"/\" + presentYear);\r\n    console.log(givingDay + \"/\" + givingMonth + \"/\" + givingYear);\r\n\r\n    var countMonths=0;\r\n\r\n    if (givingYear === presentYear) {\r\n      if (\r\n        (givingDay < 15 && presentDay < 15) ||\r\n        (givingDay >= 15 && presentDay >= 15)\r\n      ) {\r\n        countMonths = presentMonth - givingMonth;\r\n      }\r\n      if (givingDay >= 15 && presentDay < 15) {\r\n        countMonths = presentMonth - givingMonth - 1;\r\n      }\r\n      if (givingDay < 15 && presentDay >= 15) {\r\n        countMonths = presentMonth - givingMonth + 1;\r\n      }\r\n    }\r\n    if (presentYear> givingYear) {\r\n      if (givingMonth === presentMonth) {\r\n        if (\r\n          (givingDay < 15 && presentDay < 15) ||\r\n          (givingDay >= 15 && presentDay >= 15)\r\n        ) {\r\n          countMonths = 12;\r\n        }\r\n        if (givingDay >= 15 && presentDay < 15) {\r\n          countMonths = 11;\r\n        }\r\n        if (givingDay < 15 && presentDay >= 15) {\r\n          countMonths = 13;\r\n        }\r\n      }\r\n      if (givingMonth > presentMonth) {\r\n        if (\r\n          (givingDay < 15 && presentDay < 15) ||\r\n          (givingDay >= 15 && presentDay >= 15)\r\n        ) {\r\n          countMonths = 12 - givingMonth + presentMonth;\r\n        }\r\n        if (givingDay >= 15 && presentDay < 15) {\r\n          countMonths = 11 - givingMonth + presentMonth;\r\n        }\r\n        if (givingDay < 15 && presentDay >= 15) {\r\n          countMonths = 13 - givingMonth + presentMonth;\r\n        }\r\n      }\r\n      if (givingMonth < presentMonth) {\r\n        if (\r\n          (givingDay < 15 && presentDay < 15) ||\r\n          (givingDay >= 15 && presentDay >= 15)\r\n        ) {\r\n          countMonths = 12 - givingMonth + presentMonth;\r\n        }\r\n        if (givingDay >= 15 && presentDay < 15) {\r\n          countMonths = 12 - givingMonth + presentMonth - 1;\r\n        }\r\n        if (givingDay < 15 && presentDay >= 15) {\r\n          countMonths = 12 - givingMonth + presentMonth + 1;\r\n        }\r\n      }\r\n    }\r\n    console.log(countMonths);\r\n\r\n    const Interest = amount * 0.02 * countMonths;\r\n    console.log(Interest);\r\n    setRightInterest(parseFloat(rightInterest) + parseFloat(Interest));\r\n    const x = {\r\n      amount,\r\n      date,\r\n    };\r\n    setRightAmount([...rightAmount, x]);\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n    setTotalTaken(parseFloat(totalTaken) + parseFloat(amount));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Returned By Us</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"row\">\r\n              <InputGroup className=\"container\">\r\n                <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                <Input\r\n                  type=\"number\"\r\n                  placeholder=\"Amount\"\r\n                  name=\"RightAmount\"\r\n                  id=\"RightAmount\"\r\n                  value={amount}\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n                {/* TODO*/}\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <InputGroup>\r\n              <Input\r\n                type=\"date\"\r\n                placeholder=\"Date\"\r\n                name=\"InvestingDate\"\r\n                id=\"InvestingDate\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n              />\r\n              {/* TODO*/}\r\n            </InputGroup>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Button type=\"submit\" color=\"secondary\" className=\"container\">\r\n              Submit\r\n            </Button>\r\n            {/* TODO*/}\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className=\"border-bottom mt-3\">\r\n        <TotalRight\r\n          Taken={formatter.format(totalTaken)}\r\n          Interest={formatter.format(rightInterest)}\r\n        />\r\n      </div>\r\n      {/* TODO*/}\r\n\r\n      <div className=\"my-4\">\r\n        <div className=\"row\">\r\n          <div className=\"ml-4 col-2\">\r\n            <b>SR. NO.</b>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <b>AMOUNT</b>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <b>DATE</b>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"amounts\">\r\n        {rightAmount.map(function (amt, index) {\r\n          return (\r\n            <ReturnedAmounts\r\n              key={index}\r\n              index={index + 1}\r\n              Amount={formatter.format(amt.amount)}\r\n              date={amt.date}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Right;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Left from \"./LeftSide/Left\";\r\nimport Right from \"./RightSide/Right\";\r\n\r\nconst MainBody = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col bg-light text-dark border-right border-top border-dark\">\r\n        <Left />\r\n      </div>\r\n      <div className=\"col bg-light text-dark border-right border-top border-dark\">\r\n        <Right />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainBody;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nconst HeaderSection = () => {\r\n    return (\r\n        <div className=\"row  \">\r\n            <div className=\"col text-light text-right pr-0 bg-dark\">\r\n            <h1><b>HISAB</b></h1></div>\r\n            <div className=\" text-light text-left pl-0 bg-dark\"><h1><b>-</b></h1></div>\r\n            <div className=\"col text-light text-left pl-0 bg-dark\">\r\n            <h1><b>KITAB</b></h1>\r\n            </div>\r\n        </div>\r\n        )\r\n};\r\n\r\nexport default HeaderSection;\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Total = () => {\r\n  return (\r\n    <div className=\"my-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h3>TotalAmount: <span className=\"bg-dark  text-light\">00.00</span></h3>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <h3>Principle: <span className=\"bg-success\">00.00</span></h3>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h3>Interest: <span className=\"bg-warning\">00.00</span></h3>\r\n        </div>\r\n      </div>\r\n\r\n      <Button className=\"my-2\">CALCULATE</Button>\r\n    </div>\r\n  );\r\n};\r\nexport default Total;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport MainBody from \"./Components/MainBody\";\nimport HeaderSection from \"./Components/HeaderSection\";\nimport Settings from \"./Components/Total\";\nfunction App() {\n  return (\n    <div className=\"container-fluid text-center\">\n      <HeaderSection/>\n      <Settings/>\n      <MainBody/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}